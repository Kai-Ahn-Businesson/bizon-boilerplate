name: 보안 스캔

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 9 * * 1'  # 매주 월요일 오전 9시

jobs:
  frontend-security:
    name: 프론트엔드 보안 스캔
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: Node.js 설정
      uses: actions/setup-node@v4
      with:
        node-version: '24.7.0'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock
        
    - name: 의존성 설치
      run: yarn install --frozen-lockfile
      
    - name: Yarn Audit 실행
      run: yarn audit --level moderate
      continue-on-error: true
      
    - name: npm audit 실행
      run: npm audit --audit-level moderate
      continue-on-error: true

  backend-security:
    name: 백엔드 보안 스캔
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: Java 24 설정
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'
        
    - name: Gradle 캐시 설정
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Gradle 실행 권한 부여
      run: chmod +x gradlew
      
    - name: OWASP Dependency Check
      run: ./gradlew dependencyCheckAnalyze
      continue-on-error: true
      
    - name: 보안 스캔 결과 업로드
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: backend/build/reports/dependency-check-report.html

  codeql:
    name: CodeQL 분석
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    
    strategy:
      matrix:
        language: [ 'javascript', 'java-kotlin' ]
    
    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: CodeQL 초기화
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        
    - name: 자동 빌드 (JavaScript)
      if: matrix.language == 'javascript'
      uses: github/codeql-action/autobuild@v3
      
    - name: Java 24 설정 (Kotlin/Java)
      if: matrix.language == 'java-kotlin'
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'
        
    - name: 백엔드 빌드 (Kotlin/Java)
      if: matrix.language == 'java-kotlin'
      working-directory: ./backend
      run: |
        chmod +x gradlew
        ./gradlew build -x test
        
    - name: CodeQL 분석 실행
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"